<?php

namespace My\UiBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity(repositoryClass="My\UiBundle\Repository\ItemRepository")
 * @ORM\Table(name="items")
 */
class Item
{
	/**
	 * @ORM\Id @ORM\GeneratedValue(strategy="NONE")
	 * @ORM\Column(type="bigint")
	 */
	private $id;

	/**
	 * @ORM\Column(type="smallint")
	 */
	private $status;
	const STATUS_BAD		= -2;
	const STATUS_UNWANTED	= -1;
	const STATUS_NEW		= 0;
	const STATUS_DOWNLOAD	= 1;

	/**
     * @ORM\Column(type="smallint")
     */
	private $category;
	const CATEGORY_SERIES_HD = 208;
	const CATEGORY_MOVIES_HD = 207;
	const CATEGORY_GAMES_PC = 401;
	const CATEGORY_APPS_WIN = 301;
	const CATEGORY_MUSIC = 101;
	const CATEGORY_AUDIOBOOKS = 102;

	/**
	 * @ORM\Column(type="smallint")
	 */
	private $page;

    /**
     * @ORM\Column(type="string", length=500)
     */
    private $title;

    /**
    * @ORM\Column(type="string", length=25)
    */
    private $size;

	/**
	 * @ORM\Column(type="string", length=255)
	 */
	private $uploader;

	/**
	 * @ORM\Column(type="text")
	 */
    private $linkMagnet;

    /**
     * @ORM\Column(type="integer")
     */
	private $popularity;


	/**
	 * @ORM\Column(type="datetime")
	 */
	private $createdAt;

	/**
	 * @ORM\Column(type="datetime", nullable=true)
	 */
	private $updatedAt;

	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////

	/**
	 * Construct
	 */
	public function __construct()
	{
		$this->createdAt = new \DateTime();
		$this->status = self::STATUS_NEW;
	}


	/**
	 * Is New
	 */
	public function isNew()
	{
		return ($this->getStatus() === self::STATUS_NEW ? true : false);
	}


	/**
	 * Is Downloaded
	 */
	public function isDownloaded()
	{
		return ($this->getStatus() === self::STATUS_DOWNLOAD ? true : false);
	}


	/**
	 * Is Unwanted
	 */
	public function isUnwanted()
	{
		return ($this->getStatus() <= self::STATUS_UNWANTED ? true : false);
	}

	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////
}