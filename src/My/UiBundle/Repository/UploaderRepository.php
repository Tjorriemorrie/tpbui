<?php

namespace My\UiBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UploaderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UploaderRepository extends EntityRepository
{
	/**
	 * Get all uploader's average stats
	 */
	public function getAverageStats($categoryId = null)
	{
		$avg = array();
		$qb = $this->getEntityManager()->createQueryBuilder();
		$qb->select($qb->expr()->avg('t.popularity'))->from('My\UiBundle\Entity\Torrent', 't');
		if (!is_null($categoryId)) $qb->where('t.category = ?1')->setParameter(1, $categoryId);
		$avgStats = $qb->groupBy('t.uploader')
			->getQuery()
			->getResult();
		//die(var_dump($avgStats));
		if (!count($avgStats)) return null;
		
		foreach ($avgStats as $avgStat) {
			$avg[] = $avgStat[1];
		}
		return (array_sum($avg) / count($avg));
	}
	
	
	public function getStats($id)
	{
		$qb = $this->getEntityManager()->createQueryBuilder();
		$avgStats = $this->getAverageStats();
		die(var_dump($avgStats));
		//return $
	}
	
	
	/**
	 * Gets names of uplaoders
	 */
	public function getNames()
	{
		$qb = $this->getEntityManager()->createQueryBuilder();
		$results = $qb->select('u.name')->from('My\UiBundle\Entity\Uploader', 'u')
			->getQuery()
			->getResult();
		$names = array();
		foreach ($results as $result) {
			$names[] = $result['name'];
		}
		return $names;
	}
}